@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

html, body {
  height: 100%;
}

body {
  font-family: Roboto, sans-serif;
  margin: 0;
  background: #aaa;
  color: #333;
  /* I'll give you this one for free lol */
  display: flex;
  align-items: center;
  justify-content: center;
}

.modal {
  background: white;
  width: 480px;
  border-radius: 10px;
  box-shadow: 2px 4px 16px rgba(0,0,0,.2);
  padding: 16px;
  display: flex;
  /*flex: 0 0 auto; not necessary since once icon is prevented from shrinking the contents
  will take up the rest of the available space.  The available space is going to be the width
  since default flex basis is auto.*/
  gap: 16px;
}

.icon {
  color: royalblue;
  font-size: 26px;
  font-weight: 700;
  background: lavender;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink:0; /*makes flex: 0 0 auto; under .modal irrelevant*/
}

.close-button {
  background: #eee;
  border-radius: 50%;
  color: #888;
  font-weight: 400;
  font-size: 16px;
  height: 24px;
  width: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

button {
  padding: 8px 16px;
  border-radius: 8px;
}

button.continue {
  background: royalblue;
  border: 1px solid royalblue;
  color: white;
}

button.cancel {
  background: white;
  border: 1px solid #ddd;
  color: royalblue;
}

.content {
  display: flex;
  flex-direction: column;
  gap:10px;
  /*justify-content: center; Unnecessary*/
}

.header-and-close {
  display: flex;
  justify-content: space-between;
  font-weight: bold;
  font-size: large;
}
/*my method is inefficient. official solution puts the cancel button as a div inside 
the header. This makes the header text and the cancel button two separete flex items in header. 
My way makes the header div and close button div two flex items in .header-and-close div 
Also I forgot that buttons are inline blocks so I put them in a container div together 
and made the content div a flex box.  When I tested removing the button container div
the content div flex box and column direction made the buttons occupy separate rows
making the button container div seem neccessary. The only useful thing the content div flex
box provided was the gap property which the official solution replaces with margin bottoms
under .header and .text.
one minor difference noted is that my solution makes the gap between header, text,
and the buttons equal while the official solution has the distance between the txt and buttons 
be double the distance between header and text. However this was not a written requirement*/ 